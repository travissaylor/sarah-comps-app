{"ast":null,"code":"var _jsxFileName = \"/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/note/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Nav from '../../components/nav';\nimport * as firebase from 'firebase';\nimport loadFirebase from '../../lib/db';\nimport withRouter from 'next/router';\n\nclass Note extends React.Component {\n  static async getInitialProps(context) {\n    const id = context.query.id;\n    return {\n      id\n    };\n  } // componentDidMount() {\n  //     const { id } = this.props.id;\n  //     if (!firebase.apps.length) {\n  //         firebase.initializeApp(clientCredentials);\n  //     }\n  //     const rootRef = firebase.database().ref().child('notes/' + id);\n  //     const titleRef = rootRef.child('title');\n  //     const contentRef = rootRef.child('content');\n  //     var title = '';\n  //     var content = '';\n  //     titleRef.on('value', snap => {\n  //         title = snap.val();\n  //     });\n  //     contentRef.on('value', snap => {\n  //         content = snap.val();\n  //     });\n  //     return {id, title, content};\n  // }\n\n\n  constructor(props) {\n    super(props);\n    console.log(props.query);\n    this.state = {\n      id: this.props.id,\n      title: '',\n      content: ''\n    };\n  }\n\n  async componentDidMount() {\n    const firebase = await loadFirebase();\n    const db = firebase.firestore();\n    console.log(this.state.id);\n    let noteRef = db.collection('notes');\n    let note = noteRef.doc(this.props.id).get().then(snapshot => {\n      console.log(\"snapshot\", snapshot);\n      this.setState({\n        title: snapshot.data().title,\n        content: snapshot.data().content\n      });\n      console.log(\"CDM state\", this.state);\n    }).catch(err => {\n      console.log('Error getting documents', err);\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Note\"), __jsx(\"link\", {\n      rel: \"icon\",\n      href: \"/favicon.ico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), __jsx(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Title: \", this.props.title), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.props.content));\n  }\n\n}\n\nexport default Note;","map":{"version":3,"sources":["/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/note/[id].js"],"names":["React","Head","Nav","firebase","loadFirebase","withRouter","Note","Component","getInitialProps","context","id","query","constructor","props","console","log","state","title","content","componentDidMount","db","firestore","noteRef","collection","note","doc","get","then","snapshot","setState","data","catch","err","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AAC/B,eAAaC,eAAb,CAA6BC,OAA7B,EAAsC;AAClC,UAAMC,EAAE,GAAGD,OAAO,CAACE,KAAR,CAAcD,EAAzB;AACA,WAAO;AAACA,MAAAA;AAAD,KAAP;AACH,GAJ8B,CAM/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEAE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,KAAlB;AACA,SAAKK,KAAL,GAAa;AACTN,MAAAA,EAAE,EAAE,KAAKG,KAAL,CAAWH,EADN;AAETO,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,UAAMhB,QAAQ,GAAG,MAAMC,YAAY,EAAnC;AACA,UAAMgB,EAAE,GAAGjB,QAAQ,CAACkB,SAAT,EAAX;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWN,EAAvB;AAEA,QAAIY,OAAO,GAAGF,EAAE,CAACG,UAAH,CAAc,OAAd,CAAd;AACA,QAAIC,IAAI,GAAGF,OAAO,CAACG,GAAR,CAAY,KAAKZ,KAAL,CAAWH,EAAvB,EAA2BgB,GAA3B,GACVC,IADU,CACLC,QAAQ,IAAI;AACdd,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBa,QAAxB;AACA,WAAKC,QAAL,CAAc;AACVZ,QAAAA,KAAK,EAAEW,QAAQ,CAACE,IAAT,GAAgBb,KADb;AAEVC,QAAAA,OAAO,EAAEU,QAAQ,CAACE,IAAT,GAAgBZ;AAFf,OAAd;AAIFJ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB,KAAKC,KAA7B;AACD,KARU,EASVe,KATU,CASJC,GAAG,IAAI;AACZlB,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCiB,GAAvC;AACD,KAXU,CAAX;AAaH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEA;AAAM,MAAA,GAAG,EAAC,MAAV;AAAiB,MAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ,EAMI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKpB,KAAL,CAAWI,KAAvB,CARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKJ,KAAL,CAAWK,OAAf,CATJ,CADJ;AAcH;;AAxE8B;;AA4EnC,eAAeZ,IAAf","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport Nav from '../../components/nav'\nimport * as firebase from 'firebase';\nimport loadFirebase from '../../lib/db'\nimport withRouter from 'next/router'\n\nclass Note extends React.Component {\n    static async getInitialProps(context) {\n        const id = context.query.id;\n        return {id}\n    }\n\n    // componentDidMount() {\n    //     const { id } = this.props.id;\n    //     if (!firebase.apps.length) {\n    //         firebase.initializeApp(clientCredentials);\n    //     }\n    //     const rootRef = firebase.database().ref().child('notes/' + id);\n    //     const titleRef = rootRef.child('title');\n    //     const contentRef = rootRef.child('content');\n    //     var title = '';\n    //     var content = '';\n    //     titleRef.on('value', snap => {\n    //         title = snap.val();\n    //     });\n    //     contentRef.on('value', snap => {\n    //         content = snap.val();\n    //     });\n        \n    //     return {id, title, content};\n    // }\n\n    constructor(props) {\n        super(props);\n        console.log(props.query);\n        this.state = {\n            id: this.props.id,\n            title: '',\n            content: ''\n        }\n    }\n\n    async componentDidMount() {\n        const firebase = await loadFirebase();\n        const db = firebase.firestore();\n        console.log(this.state.id);\n\n        let noteRef = db.collection('notes');\n        let note = noteRef.doc(this.props.id).get()\n        .then(snapshot => {\n            console.log(\"snapshot\", snapshot);\n            this.setState({\n                title: snapshot.data().title,\n                content: snapshot.data().content\n            })\n          console.log(\"CDM state\",this.state);\n        })\n        .catch(err => {\n          console.log('Error getting documents', err);\n        });\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Head>\n                <title>Note</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n                </Head>\n    \n                <Nav />\n    \n                <h1>Title: {this.props.title}</h1>\n                <p>{this.props.content}</p>\n    \n            </div>\n        )\n    }\n\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}