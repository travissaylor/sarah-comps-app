{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/recharge.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Nav from '../components/nav';\nimport Link from 'next/link';\nimport ButtonAppBar from '../components/buttonAppBar';\nimport fetch from 'isomorphic-unfetch';\n\nvar Recharge =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Recharge, _React$Component);\n\n  function Recharge() {\n    _classCallCheck(this, Recharge);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Recharge).apply(this, arguments));\n  }\n\n  _createClass(Recharge, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Recharge\"), __jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), __jsx(ButtonAppBar, {\n        title: \"Recharge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), __jsx(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Michael Scott Quote\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.quote), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.props.escapedQuote), __jsx(\"img\", {\n        src: this.props.gif,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        style: {\n          width: '100%',\n          height: 0,\n          paddingBottom: '55%',\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"iframe\", {\n        src: this.props.gif,\n        width: \"100%\",\n        height: \"100%\",\n        style: {\n          position: absolute\n        },\n        frameBorder: \"0\",\n        \"class\": \"giphy-embed\",\n        allowFullScreen: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var quoteRes, quoteData, quote, escapedQuote, gif, gifRes, gifData, _gifRes, _gifData;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://michael-scott-quotes.herokuapp.com/quote'));\n\n            case 2:\n              quoteRes = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(quoteRes.json());\n\n            case 5:\n              quoteData = _context.sent;\n              quote = quoteData.quote;\n              escapedQuote = encodeURI('michael scott ' + quote);\n              gif = '';\n              _context.prev = 9;\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=' + escapedQuote));\n\n            case 12:\n              gifRes = _context.sent;\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(gifRes.json());\n\n            case 15:\n              gifData = _context.sent;\n              gif = gifData.data[0].images.fixed_height_downsampled.webp;\n              _context.next = 29;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](9);\n              console.log(_context.t0);\n              _context.next = 24;\n              return _regeneratorRuntime.awrap(fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=michael%20scott'));\n\n            case 24:\n              _gifRes = _context.sent;\n              _context.next = 27;\n              return _regeneratorRuntime.awrap(_gifRes.json());\n\n            case 27:\n              _gifData = _context.sent;\n              gif = _gifData.data[0].embed_url;\n\n            case 29:\n              return _context.abrupt(\"return\", {\n                quote: quote,\n                gif: gif,\n                escapedQuote: escapedQuote\n              });\n\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[9, 19]]);\n    }\n  }]);\n\n  return Recharge;\n}(React.Component);\n\nexport default Recharge;","map":{"version":3,"sources":["/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/recharge.js"],"names":["React","Head","Nav","Link","ButtonAppBar","fetch","Recharge","props","quote","escapedQuote","gif","width","height","paddingBottom","position","absolute","quoteRes","json","quoteData","encodeURI","gifRes","gifData","data","images","fixed_height_downsampled","webp","console","log","embed_url","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEMC,Q;;;;;;;;;;;;;6BAoBO;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEA;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADJ,EAKI,MAAC,YAAD;AAAc,QAAA,KAAK,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKC,KAAL,CAAWC,KAAf,CATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKD,KAAL,CAAWE,YAAf,CAVJ,EAWI;AAAK,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAYI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC,MAAP;AAAeC,UAAAA,MAAM,EAAC,CAAtB;AAAyBC,UAAAA,aAAa,EAAC,KAAvC;AAA8CC,UAAAA,QAAQ,EAAC;AAAvD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,GAAG,EAAE,KAAKP,KAAL,CAAWG,GAAxB;AAA6B,QAAA,KAAK,EAAC,MAAnC;AAA0C,QAAA,MAAM,EAAC,MAAjD;AAAwD,QAAA,KAAK,EAAE;AAACI,UAAAA,QAAQ,EAACC;AAAV,SAA/D;AAAoF,QAAA,WAAW,EAAC,GAAhG;AAAoG,iBAAM,aAA1G;AAAwH,QAAA,eAAe,MAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAZJ,CADJ;AAkBH;;;;;;;;;;;+CArC0BV,KAAK,CAAC,kDAAD,C;;;AAAtBW,cAAAA,Q;;+CACkBA,QAAQ,CAACC,IAAT,E;;;AAAlBC,cAAAA,S;AACAV,cAAAA,K,GAAQU,SAAS,CAACV,K;AAClBC,cAAAA,Y,GAAeU,SAAS,CAAC,mBAAmBX,KAApB,C;AAC1BE,cAAAA,G,GAAM,E;;;+CAEeL,KAAK,CAAC,iEAAiEI,YAAlE,C;;;AAApBW,cAAAA,M;;+CACgBA,MAAM,CAACH,IAAP,E;;;AAAhBI,cAAAA,O;AACNX,cAAAA,GAAG,GAAGW,OAAO,CAACC,IAAR,CAAa,CAAb,EAAgBC,MAAhB,CAAuBC,wBAAvB,CAAgDC,IAAtD;;;;;;;AAEAC,cAAAA,OAAO,CAACC,GAAR;;+CACqBtB,KAAK,CAAC,6EAAD,C;;;AAApBe,cAAAA,O;;+CACgBA,OAAM,CAACH,IAAP,E;;;AAAhBI,cAAAA,Q;AACNX,cAAAA,GAAG,GAAGW,QAAO,CAACC,IAAR,CAAa,CAAb,EAAgBM,SAAtB;;;+CAGG;AAACpB,gBAAAA,KAAK,EAALA,KAAD;AAAQE,gBAAAA,GAAG,EAAHA,GAAR;AAAaD,gBAAAA,YAAY,EAAZA;AAAb,e;;;;;;;;;;;;EAlBQT,KAAK,CAAC6B,S;;AA0C7B,eAAevB,QAAf","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport Nav from '../components/nav'\nimport Link from 'next/link'\nimport ButtonAppBar from '../components/buttonAppBar'\nimport fetch from 'isomorphic-unfetch'\n\nclass Recharge extends React.Component{\n    static async getInitialProps() {\n        const quoteRes = await fetch('https://michael-scott-quotes.herokuapp.com/quote');\n        const quoteData = await quoteRes.json();\n        const quote = quoteData.quote;\n        const escapedQuote = encodeURI('michael scott ' + quote);\n        var gif = '';\n        try {\n            const gifRes = await fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=' + escapedQuote);\n            const gifData = await gifRes.json();\n            gif = gifData.data[0].images.fixed_height_downsampled.webp\n        } catch(error) {\n            console.log(error);\n            const gifRes = await fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=michael%20scott');\n            const gifData = await gifRes.json();\n            gif = gifData.data[0].embed_url\n        } \n        \n        return {quote, gif, escapedQuote}\n    }\n    render() {\n        return (\n            <div>\n                <Head>\n                <title>Recharge</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n                </Head>\n                <ButtonAppBar title='Recharge'/>\n                <Nav />\n\n                <h1>Michael Scott Quote</h1>\n                <p>{this.props.quote}</p>\n                <p>{this.props.escapedQuote}</p>\n                <img src={this.props.gif} />\n                <div style={{width:'100%', height:0, paddingBottom:'55%', position:'relative'}} >\n                    <iframe src={this.props.gif} width=\"100%\" height=\"100%\" style={{position:absolute}} frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Recharge"]},"metadata":{},"sourceType":"module"}