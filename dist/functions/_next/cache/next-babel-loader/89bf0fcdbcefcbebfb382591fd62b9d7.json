{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Nav from '../components/nav';\nimport Link from 'next/link';\nimport ButtonAppBar from '../components/buttonAppBar';\nimport fetch from 'isomorphic-unfetch';\n\nclass Recharge extends React.Component {\n  static async getInitialProps() {\n    var quoteRes = null;\n    var quoteData = null;\n    var quote = null;\n    var escapedQuote = null;\n    var gif = null;\n\n    try {\n      quoteRes = await fetch('https://michael-scott-quotes.herokuapp.com/quote');\n      quoteData = await quoteRes.json();\n      quote = quoteData.quote;\n      escapedQuote = encodeURI('michael scott ' + quote);\n    } catch (error) {\n      console.log(error);\n    }\n\n    try {\n      const gifRes = await fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=' + escapedQuote);\n      const gifData = await gifRes.json();\n      gif = gifData.data[0].images.fixed_height_downsampled.webp;\n    } catch (error) {\n      console.log(error);\n      const gifRes = await fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=michael%20scott');\n      const gifData = await gifRes.json();\n      gif = gifData.data[0].images.fixed_height_downsampled.webp;\n    }\n\n    return {\n      quote,\n      gif,\n      escapedQuote\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      quote: this.props.quote,\n      gif: this.props.gif\n    };\n  }\n\n  async componentDidMount() {\n    var quoteRes = null;\n    var quoteData = null;\n    var quote = null;\n    var escapedQuote = null;\n    var gif = null;\n\n    try {\n      quoteRes = await fetch('https://michael-scott-quotes.herokuapp.com/quote');\n      quoteData = await quoteRes.json();\n      quote = quoteData.quote;\n      escapedQuote = encodeURI('michael scott ' + quote);\n    } catch (error) {\n      console.log(error);\n    }\n\n    try {\n      const gifRes = await fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=' + escapedQuote);\n      const gifData = await gifRes.json();\n      gif = gifData.data[0].images.fixed_height_downsampled.webp;\n    } catch (error) {\n      console.log(error);\n      const gifRes = await fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=michael%20scott');\n      const gifData = await gifRes.json();\n      gif = gifData.data[0].images.fixed_height_downsampled.webp;\n    } finally {\n      this.setState({\n        quote: this.quote,\n        gif: this.gif\n      });\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Head, null, __jsx(\"title\", null, \"Recharge\"), __jsx(\"link\", {\n      rel: \"icon\",\n      href: \"/favicon.ico\"\n    })), __jsx(ButtonAppBar, {\n      title: \"Recharge\"\n    }), __jsx(Nav, null), __jsx(\"h1\", null, \"Michael Scott Quote\"), __jsx(\"p\", null, this.state.quote), __jsx(\"img\", {\n      src: this.state.gif\n    }));\n  }\n\n}\n\nexport default Recharge;","map":null,"metadata":{},"sourceType":"module"}