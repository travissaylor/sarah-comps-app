{"ast":null,"code":"var _jsxFileName = \"/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/notes.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Nav from '../components/nav';\nimport Link from 'next/link';\nimport loadFirebase from '../lib/db';\n\nclass Notes extends React.Component {\n  // static async getInitialProps() {\n  //     if (!firebase.apps.length) {\n  //         firebase.initializeApp(clientCredentials);\n  //     }\n  //     const rootRef = firebase.database().ref().child('notes/1');\n  //     const titleRef = rootRef.child('title');\n  //     var title = '';\n  //     titleRef.once('value', snap => {\n  //         title = snap.val();\n  //     });\n  //     console.log(title);\n  //     return {title};\n  // }\n  constructor() {\n    super();\n    this.state = {\n      notes: []\n    };\n  }\n\n  async componentDidMount() {\n    const firebase = await loadFirebase();\n    const db = firebase.firestore();\n    let notesRef = db.collection('notes');\n    let allNotes = notesRef.get().then(snapshot => {\n      var notesData = [];\n      snapshot.forEach(doc => {\n        notesData[doc.id] = doc.data();\n      });\n      this.setState({\n        notes: notesData\n      });\n      console.log('state', this.state.notes);\n    }).catch(err => {\n      console.log('Error getting documents', err);\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Notes\"), __jsx(\"link\", {\n      rel: \"icon\",\n      href: \"/favicon.ico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), __jsx(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Notes\"), this.state.notes.map(note => __jsx(Link, {\n      href: \"/note/[id]\",\n      as: \"/note/\" + note.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, note.title))), __jsx(Link, {\n      href: \"/note/[id]\",\n      as: \"/note/1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.title)));\n  }\n\n}\n\nexport default Notes;","map":{"version":3,"sources":["/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/notes.js"],"names":["React","Head","Nav","Link","loadFirebase","Notes","Component","constructor","state","notes","componentDidMount","firebase","db","firestore","notesRef","collection","allNotes","get","then","snapshot","notesData","forEach","doc","id","data","setState","console","log","catch","err","render","map","note","key","title"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,WAAzB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,QAAQ,GAAG,MAAMP,YAAY,EAAnC;AACA,UAAMQ,EAAE,GAAGD,QAAQ,CAACE,SAAT,EAAX;AACA,QAAIC,QAAQ,GAAGF,EAAE,CAACG,UAAH,CAAc,OAAd,CAAf;AACA,QAAIC,QAAQ,GAAGF,QAAQ,CAACG,GAAT,GACdC,IADc,CACTC,QAAQ,IAAI;AACd,UAAIC,SAAS,GAAG,EAAhB;AACFD,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,GAAG,IAAI;AACtBF,QAAAA,SAAS,CAACE,GAAG,CAACC,EAAL,CAAT,GAAoBD,GAAG,CAACE,IAAJ,EAApB;AACD,OAFD;AAGA,WAAKC,QAAL,CAAc;AACZhB,QAAAA,KAAK,EAAEW;AADK,OAAd;AAGAM,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKnB,KAAL,CAAWC,KAA/B;AACD,KAVc,EAWdmB,KAXc,CAWRC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCE,GAAvC;AACD,KAbc,CAAf;AAcH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEA;AAAM,MAAA,GAAG,EAAC,MAAV;AAAiB,MAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ,EAMI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ,EASK,KAAKtB,KAAL,CAAWC,KAAX,CAAiBsB,GAAjB,CAAqBC,IAAI,IAC1B,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,EAAE,EAAE,WAAWA,IAAI,CAACC,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,KAAT,CADJ,CADC,CATL,EAcI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,EAAE,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAK1B,KAAL,CAAW0B,KAAf,CADJ,CAdJ,CADJ;AAoBH;;AA9D+B;;AAiEpC,eAAe7B,KAAf","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport Nav from '../components/nav'\nimport Link from 'next/link'\nimport loadFirebase from '../lib/db'\n\nclass Notes extends React.Component {\n    // static async getInitialProps() {\n    //     if (!firebase.apps.length) {\n    //         firebase.initializeApp(clientCredentials);\n    //     }\n    //     const rootRef = firebase.database().ref().child('notes/1');\n    //     const titleRef = rootRef.child('title');\n    //     var title = '';\n    //     titleRef.once('value', snap => {\n    //         title = snap.val();\n    //     });\n    //     console.log(title);\n    //     return {title};\n    // }\n    constructor() {\n        super();\n        this.state = {\n            notes: []\n        }\n    }\n\n    async componentDidMount() {\n        const firebase = await loadFirebase();\n        const db = firebase.firestore();\n        let notesRef = db.collection('notes');\n        let allNotes = notesRef.get()\n        .then(snapshot => {\n            var notesData = [];\n          snapshot.forEach(doc => {\n            notesData[doc.id] = doc.data();\n          });\n          this.setState({\n            notes: notesData\n          })\n          console.log('state',this.state.notes);\n        })\n        .catch(err => {\n          console.log('Error getting documents', err);\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <Head>\n                <title>Notes</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n                </Head>\n\n                <Nav />\n\n                <h1>Notes</h1>\n                {this.state.notes.map(note => \n                <Link href=\"/note/[id]\" as={\"/note/\" + note.key} >\n                    <a>{note.title}</a>\n                </Link>)}\n\n                <Link href=\"/note/[id]\" as=\"/note/1\">\n                    <a>{this.state.title}</a>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default Notes"]},"metadata":{},"sourceType":"module"}