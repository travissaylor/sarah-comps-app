{"ast":null,"code":"var _jsxFileName = \"/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/note/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Nav from '../../components/nav';\nimport * as firebase from 'firebase';\nimport loadFirebase from '../../lib/db';\nimport withRouter from 'next/router';\n\nclass Note extends React.Component {\n  static async getInitialProps(context) {\n    console.log('context', context);\n    this.setState({\n      id: context.query.id\n    });\n  } // componentDidMount() {\n  //     const { id } = this.props.id;\n  //     if (!firebase.apps.length) {\n  //         firebase.initializeApp(clientCredentials);\n  //     }\n  //     const rootRef = firebase.database().ref().child('notes/' + id);\n  //     const titleRef = rootRef.child('title');\n  //     const contentRef = rootRef.child('content');\n  //     var title = '';\n  //     var content = '';\n  //     titleRef.on('value', snap => {\n  //         title = snap.val();\n  //     });\n  //     contentRef.on('value', snap => {\n  //         content = snap.val();\n  //     });\n  //     return {id, title, content};\n  // }\n\n\n  constructor(props) {\n    super(props);\n    console.log(props.query);\n    this.state = {\n      id: null,\n      title: '',\n      content: ''\n    };\n  }\n\n  async componentDidMount() {\n    const firebase = await loadFirebase();\n    const db = firebase.firestore();\n    console.log(this.props.url.query.id);\n    let notesRef = db.collection('notes');\n    let allNotes = notesRef.where('document', '==', this.props.url.query.id).get().then(snapshot => {\n      snapshot.forEach(doc => {\n        console.log(doc.id, '=>', doc.data());\n      });\n    }).catch(err => {\n      console.log('Error getting documents', err);\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Note\"), __jsx(\"link\", {\n      rel: \"icon\",\n      href: \"/favicon.ico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), __jsx(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Title: \", this.props.title), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.content));\n  }\n\n}\n\nexport default Note;","map":{"version":3,"sources":["/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/note/[id].js"],"names":["React","Head","Nav","firebase","loadFirebase","withRouter","Note","Component","getInitialProps","context","console","log","setState","id","query","constructor","props","state","title","content","componentDidMount","db","firestore","url","notesRef","collection","allNotes","where","get","then","snapshot","forEach","doc","data","catch","err","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AAC/B,eAAaC,eAAb,CAA6BC,OAA7B,EAAsC;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;AACA,SAAKG,QAAL,CAAc;AACVC,MAAAA,EAAE,EAAEJ,OAAO,CAACK,KAAR,CAAcD;AADR,KAAd;AAGH,GAN8B,CAQ/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEAE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACF,KAAlB;AACA,SAAKG,KAAL,GAAa;AACTJ,MAAAA,EAAE,EAAE,IADK;AAETK,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,UAAMjB,QAAQ,GAAG,MAAMC,YAAY,EAAnC;AACA,UAAMiB,EAAE,GAAGlB,QAAQ,CAACmB,SAAT,EAAX;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAL,CAAWO,GAAX,CAAeT,KAAf,CAAqBD,EAAjC;AAEA,QAAIW,QAAQ,GAAGH,EAAE,CAACI,UAAH,CAAc,OAAd,CAAf;AACA,QAAIC,QAAQ,GAAGF,QAAQ,CAACG,KAAT,CAAe,UAAf,EAA2B,IAA3B,EAAiC,KAAKX,KAAL,CAAWO,GAAX,CAAeT,KAAf,CAAqBD,EAAtD,EAA0De,GAA1D,GACdC,IADc,CACTC,QAAQ,IAAI;AAChBA,MAAAA,QAAQ,CAACC,OAAT,CAAiBC,GAAG,IAAI;AACtBtB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,GAAG,CAACnB,EAAhB,EAAoB,IAApB,EAA0BmB,GAAG,CAACC,IAAJ,EAA1B;AACD,OAFD;AAGD,KALc,EAMdC,KANc,CAMRC,GAAG,IAAI;AACZzB,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCwB,GAAvC;AACD,KARc,CAAf;AAUH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEA;AAAM,MAAA,GAAG,EAAC,MAAV;AAAiB,MAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ,EAMI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKpB,KAAL,CAAWE,KAAvB,CARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,KAAL,CAAWG,OAAf,CATJ,CADJ;AAcH;;AAvE8B;;AA2EnC,eAAeb,IAAf","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport Nav from '../../components/nav'\nimport * as firebase from 'firebase';\nimport loadFirebase from '../../lib/db'\nimport withRouter from 'next/router'\n\nclass Note extends React.Component {\n    static async getInitialProps(context) {\n        console.log('context', context);\n        this.setState({\n            id: context.query.id\n        })\n    }\n\n    // componentDidMount() {\n    //     const { id } = this.props.id;\n    //     if (!firebase.apps.length) {\n    //         firebase.initializeApp(clientCredentials);\n    //     }\n    //     const rootRef = firebase.database().ref().child('notes/' + id);\n    //     const titleRef = rootRef.child('title');\n    //     const contentRef = rootRef.child('content');\n    //     var title = '';\n    //     var content = '';\n    //     titleRef.on('value', snap => {\n    //         title = snap.val();\n    //     });\n    //     contentRef.on('value', snap => {\n    //         content = snap.val();\n    //     });\n        \n    //     return {id, title, content};\n    // }\n\n    constructor(props) {\n        super(props);\n        console.log(props.query);\n        this.state = {\n            id: null,\n            title: '',\n            content: ''\n        }\n    }\n\n    async componentDidMount() {\n        const firebase = await loadFirebase();\n        const db = firebase.firestore();\n        console.log(this.props.url.query.id);\n\n        let notesRef = db.collection('notes');\n        let allNotes = notesRef.where('document', '==', this.props.url.query.id).get()\n        .then(snapshot => {\n          snapshot.forEach(doc => {\n            console.log(doc.id, '=>', doc.data());\n          });\n        })\n        .catch(err => {\n          console.log('Error getting documents', err);\n        });\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Head>\n                <title>Note</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n                </Head>\n    \n                <Nav />\n    \n                <h1>Title: {this.props.title}</h1>\n                <p>{this.props.content}</p>\n    \n            </div>\n        )\n    }\n\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}