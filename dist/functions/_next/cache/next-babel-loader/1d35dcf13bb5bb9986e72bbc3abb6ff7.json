{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _readOnlyError from \"@babel/runtime-corejs2/helpers/esm/readOnlyError\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/recharge.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Nav from '../components/nav';\nimport Link from 'next/link';\nimport ButtonAppBar from '../components/buttonAppBar';\nimport fetch from 'isomorphic-unfetch';\n\nvar Recharge =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Recharge, _React$Component);\n\n  _createClass(Recharge, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var quoteRes, quoteData, quote, escapedQuote, gif, gifRes, gifData, _gifRes, _gifData;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              quoteRes = null;\n              quoteData = null;\n              quote = null;\n              escapedQuote = null;\n              gif = null;\n              _context.prev = 5;\n\n              _readOnlyError(\"quoteRes\");\n\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(fetch('https://michael-scott-quotes.herokuapp.com/quote'));\n\n            case 9:\n              quoteRes = _context.sent;\n\n              _readOnlyError(\"quoteData\");\n\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(quoteRes.json());\n\n            case 13:\n              quoteData = _context.sent;\n              quote = (_readOnlyError(\"quote\"), quoteData.quote);\n              escapedQuote = (_readOnlyError(\"escapedQuote\"), encodeURI('michael scott ' + quote));\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](5);\n              console.log(_context.t0);\n\n            case 21:\n              _context.prev = 21;\n              _context.next = 24;\n              return _regeneratorRuntime.awrap(fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=' + escapedQuote));\n\n            case 24:\n              gifRes = _context.sent;\n              _context.next = 27;\n              return _regeneratorRuntime.awrap(gifRes.json());\n\n            case 27:\n              gifData = _context.sent;\n              gif = gifData.data[0].images.fixed_height_downsampled.webp;\n              _context.next = 41;\n              break;\n\n            case 31:\n              _context.prev = 31;\n              _context.t1 = _context[\"catch\"](21);\n              console.log(_context.t1);\n              _context.next = 36;\n              return _regeneratorRuntime.awrap(fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=michael%20scott'));\n\n            case 36:\n              _gifRes = _context.sent;\n              _context.next = 39;\n              return _regeneratorRuntime.awrap(_gifRes.json());\n\n            case 39:\n              _gifData = _context.sent;\n              gif = _gifData.data[0].images.fixed_height_downsampled.webp;\n\n            case 41:\n              return _context.abrupt(\"return\", {\n                quote: quote,\n                gif: gif,\n                escapedQuote: escapedQuote\n              });\n\n            case 42:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[5, 18], [21, 31]]);\n    }\n  }]);\n\n  function Recharge(props) {\n    var _this;\n\n    _classCallCheck(this, Recharge);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Recharge).call(this, props));\n    _this.state = {\n      quote: _this.props.quote,\n      gif: _this.props.gif\n    };\n    return _this;\n  }\n\n  _createClass(Recharge, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var quoteRes, quoteData, quote, escapedQuote, gif, gifRes, gifData, _gifRes2, _gifData2;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://michael-scott-quotes.herokuapp.com/quote'));\n\n            case 2:\n              quoteRes = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(quoteRes.json());\n\n            case 5:\n              quoteData = _context2.sent;\n              quote = quoteData.quote;\n              escapedQuote = encodeURI('michael scott ' + quote);\n              gif = '';\n              _context2.prev = 9;\n              _context2.next = 12;\n              return _regeneratorRuntime.awrap(fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=' + escapedQuote));\n\n            case 12:\n              gifRes = _context2.sent;\n              _context2.next = 15;\n              return _regeneratorRuntime.awrap(gifRes.json());\n\n            case 15:\n              gifData = _context2.sent;\n              gif = gifData.data[0].images.fixed_height_downsampled.webp;\n              _context2.next = 29;\n              break;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](9);\n              console.log(_context2.t0);\n              _context2.next = 24;\n              return _regeneratorRuntime.awrap(fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=michael%20scott'));\n\n            case 24:\n              _gifRes2 = _context2.sent;\n              _context2.next = 27;\n              return _regeneratorRuntime.awrap(_gifRes2.json());\n\n            case 27:\n              _gifData2 = _context2.sent;\n              gif = _gifData2.data[0].images.fixed_height_downsampled.webp;\n\n            case 29:\n              _context2.prev = 29;\n              this.setState({\n                quote: this.quote,\n                gif: this.gif\n              });\n              return _context2.finish(29);\n\n            case 32:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[9, 19, 29, 32]]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Recharge\"), __jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), __jsx(ButtonAppBar, {\n        title: \"Recharge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), __jsx(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Michael Scott Quote\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.quote), __jsx(\"img\", {\n        src: this.state.gif,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Recharge;\n}(React.Component);\n\nexport default Recharge;","map":{"version":3,"sources":["/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/recharge.js"],"names":["React","Head","Nav","Link","ButtonAppBar","fetch","Recharge","quoteRes","quoteData","quote","escapedQuote","gif","json","encodeURI","console","log","gifRes","gifData","data","images","fixed_height_downsampled","webp","props","state","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport Nav from '../components/nav'\nimport Link from 'next/link'\nimport ButtonAppBar from '../components/buttonAppBar'\nimport fetch from 'isomorphic-unfetch'\n\nclass Recharge extends React.Component{\n    static async getInitialProps() {\n        const quoteRes = null;\n        const quoteData = null;\n        const quote = null;\n        const escapedQuote = null;\n        var gif = null;\n        try {\n            quoteRes = await fetch('https://michael-scott-quotes.herokuapp.com/quote');\n            quoteData = await quoteRes.json();\n            quote = quoteData.quote;\n            escapedQuote = encodeURI('michael scott ' + quote);\n        } catch (error) {\n            console.log(error);\n        }\n\n        try {\n            const gifRes = await fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=' + escapedQuote);\n            const gifData = await gifRes.json();\n            gif = gifData.data[0].images.fixed_height_downsampled.webp\n        } catch(error) {\n            console.log(error);\n            const gifRes = await fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=michael%20scott');\n            const gifData = await gifRes.json();\n            gif = gifData.data[0].images.fixed_height_downsampled.webp\n        } \n        \n        return {quote, gif, escapedQuote}\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            quote: this.props.quote,\n            gif: this.props.gif\n        }\n    }\n\n    async componentDidMount() {\n        const quoteRes = await fetch('https://michael-scott-quotes.herokuapp.com/quote');\n        const quoteData = await quoteRes.json();\n        const quote = quoteData.quote;\n        const escapedQuote = encodeURI('michael scott ' + quote);\n        var gif = '';\n        try {\n            const gifRes = await fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=' + escapedQuote);\n            const gifData = await gifRes.json();\n            gif = gifData.data[0].images.fixed_height_downsampled.webp\n        } catch(error) {\n            console.log(error);\n            const gifRes = await fetch('http://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&q=michael%20scott');\n            const gifData = await gifRes.json();\n            gif = gifData.data[0].images.fixed_height_downsampled.webp\n        } finally {\n            this.setState({\n                quote: this.quote,\n                gif: this.gif\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Head>\n                <title>Recharge</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n                </Head>\n                <ButtonAppBar title='Recharge'/>\n                <Nav />\n\n                <h1>Michael Scott Quote</h1>\n                <p>{this.state.quote}</p>\n                <img src={this.state.gif} />\n            </div>\n        )\n    }\n}\n\nexport default Recharge"]},"metadata":{},"sourceType":"module"}