{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/notes.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Nav from '../components/nav';\nimport Link from 'next/link';\nimport loadFirebase from '../lib/db';\n\nvar Notes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Notes, _React$Component);\n\n  // static async getInitialProps() {\n  //     if (!firebase.apps.length) {\n  //         firebase.initializeApp(clientCredentials);\n  //     }\n  //     const rootRef = firebase.database().ref().child('notes/1');\n  //     const titleRef = rootRef.child('title');\n  //     var title = '';\n  //     titleRef.once('value', snap => {\n  //         title = snap.val();\n  //     });\n  //     console.log(title);\n  //     return {title};\n  // }\n  function Notes() {\n    var _this;\n\n    _classCallCheck(this, Notes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Notes).call(this));\n    _this.state = {\n      notes: []\n    };\n    return _this;\n  }\n\n  _createClass(Notes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var firebase, db, notesRef, allNotes;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(loadFirebase());\n\n            case 2:\n              firebase = _context.sent;\n              db = firebase.firestore();\n              notesRef = db.collection('notes');\n              allNotes = notesRef.get().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  var joined = _this2.state.notes.concat(doc.id, '=>', doc.data());\n\n                  _this2.setState({\n                    notes: joined\n                  });\n                });\n                console.log('state', _this2.state.notes);\n              })[\"catch\"](function (err) {\n                console.log('Error getting documents', err);\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Notes\"), __jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), __jsx(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Notes\"), __jsx(Link, {\n        href: \"/note/[id]\",\n        as: \"/note/1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.state.title)));\n    }\n  }]);\n\n  return Notes;\n}(React.Component);\n\nexport default Notes;","map":{"version":3,"sources":["/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/notes.js"],"names":["React","Head","Nav","Link","loadFirebase","Notes","state","notes","firebase","db","firestore","notesRef","collection","allNotes","get","then","snapshot","forEach","doc","joined","concat","id","data","setState","console","log","err","title","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,WAAzB;;IAEMC,K;;;;;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAFU;AAKb;;;;;;;;;;;;;+CAG0BH,YAAY,E;;;AAA7BI,cAAAA,Q;AACAC,cAAAA,E,GAAKD,QAAQ,CAACE,SAAT,E;AACPC,cAAAA,Q,GAAWF,EAAE,CAACG,UAAH,CAAc,OAAd,C;AACXC,cAAAA,Q,GAAWF,QAAQ,CAACG,GAAT,GACdC,IADc,CACT,UAAAC,QAAQ,EAAI;AAChBA,gBAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAAC,GAAG,EAAI;AACtB,sBAAIC,MAAM,GAAG,MAAI,CAACb,KAAL,CAAWC,KAAX,CAAiBa,MAAjB,CAAwBF,GAAG,CAACG,EAA5B,EAAgC,IAAhC,EAAsCH,GAAG,CAACI,IAAJ,EAAtC,CAAb;;AACA,kBAAA,MAAI,CAACC,QAAL,CAAc;AACVhB,oBAAAA,KAAK,EAAEY;AADG,mBAAd;AAGD,iBALD;AAMAK,gBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,MAAI,CAACnB,KAAL,CAAWC,KAA/B;AACD,eATc,WAUR,UAAAmB,GAAG,EAAI;AACZF,gBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCC,GAAvC;AACD,eAZc,C;;;;;;;;;;;6BAeV;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADJ,EAMI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARJ,EASI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,YAAX;AAAwB,QAAA,EAAE,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKpB,KAAL,CAAWqB,KAAf,CADJ,CATJ,CADJ;AAeH;;;;EAxDe3B,KAAK,CAAC4B,S;;AA2D1B,eAAevB,KAAf","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport Nav from '../components/nav'\nimport Link from 'next/link'\nimport loadFirebase from '../lib/db'\n\nclass Notes extends React.Component {\n    // static async getInitialProps() {\n    //     if (!firebase.apps.length) {\n    //         firebase.initializeApp(clientCredentials);\n    //     }\n    //     const rootRef = firebase.database().ref().child('notes/1');\n    //     const titleRef = rootRef.child('title');\n    //     var title = '';\n    //     titleRef.once('value', snap => {\n    //         title = snap.val();\n    //     });\n    //     console.log(title);\n    //     return {title};\n    // }\n    constructor() {\n        super();\n        this.state = {\n            notes: []\n        }\n    }\n\n    async componentDidMount() {\n        const firebase = await loadFirebase();\n        const db = firebase.firestore();\n        let notesRef = db.collection('notes');\n        let allNotes = notesRef.get()\n        .then(snapshot => {\n          snapshot.forEach(doc => {\n            var joined = this.state.notes.concat(doc.id, '=>', doc.data())\n            this.setState({\n                notes: joined\n            })\n          });\n          console.log('state',this.state.notes);\n        })\n        .catch(err => {\n          console.log('Error getting documents', err);\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <Head>\n                <title>Notes</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n                </Head>\n\n                <Nav />\n\n                <h1>Notes</h1>\n                <Link href=\"/note/[id]\" as=\"/note/1\">\n                    <a>{this.state.title}</a>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default Notes"]},"metadata":{},"sourceType":"module"}