{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/note/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Nav from '../../components/nav';\nimport * as firebase from 'firebase';\nimport loadFirebase from '../../lib/db';\nimport withRouter from 'next/router';\n\nvar Note =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Note, _React$Component);\n\n  _createClass(Note, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(context) {\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('context', context);\n              this.setState({\n                id: context.query.id\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    } // componentDidMount() {\n    //     const { id } = this.props.id;\n    //     if (!firebase.apps.length) {\n    //         firebase.initializeApp(clientCredentials);\n    //     }\n    //     const rootRef = firebase.database().ref().child('notes/' + id);\n    //     const titleRef = rootRef.child('title');\n    //     const contentRef = rootRef.child('content');\n    //     var title = '';\n    //     var content = '';\n    //     titleRef.on('value', snap => {\n    //         title = snap.val();\n    //     });\n    //     contentRef.on('value', snap => {\n    //         content = snap.val();\n    //     });\n    //     return {id, title, content};\n    // }\n\n  }]);\n\n  function Note(props) {\n    var _this;\n\n    _classCallCheck(this, Note);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Note).call(this, props));\n    console.log(props.query);\n    _this.state = {\n      id: null,\n      title: '',\n      content: ''\n    };\n    return _this;\n  }\n\n  _createClass(Note, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var firebase, db, notesRef, allNotes;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(loadFirebase());\n\n            case 2:\n              firebase = _context2.sent;\n              db = firebase.firestore();\n              console.log(router);\n              console.log(this.props.url.query.id);\n              notesRef = db.collection('notes');\n              allNotes = notesRef.where('document', '==', this.props.url.query.id).get().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  console.log(doc.id, '=>', doc.data());\n                });\n              })[\"catch\"](function (err) {\n                console.log('Error getting documents', err);\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Note\"), __jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), __jsx(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Title: \", this.props.title), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.props.content));\n    }\n  }]);\n\n  return Note;\n}(React.Component);\n\nexport default Note;","map":{"version":3,"sources":["/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/note/[id].js"],"names":["React","Head","Nav","firebase","loadFirebase","withRouter","Note","context","console","log","setState","id","query","props","state","title","content","db","firestore","router","url","notesRef","collection","allNotes","where","get","then","snapshot","forEach","doc","data","err","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;;IAEMC,I;;;;;;;oCAC2BC,O;;;;;AACzBC,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;AACA,mBAAKG,QAAL,CAAc;AACVC,gBAAAA,EAAE,EAAEJ,OAAO,CAACK,KAAR,CAAcD;AADR,eAAd;;;;;;;;MAKJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;AAEA,gBAAYE,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACD,KAAlB;AACA,UAAKE,KAAL,GAAa;AACTH,MAAAA,EAAE,EAAE,IADK;AAETI,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAHe;AAQlB;;;;;;;;;;;+CAG0BZ,YAAY,E;;;AAA7BD,cAAAA,Q;AACAc,cAAAA,E,GAAKd,QAAQ,CAACe,SAAT,E;AACXV,cAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ;AACAX,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWO,GAAX,CAAeR,KAAf,CAAqBD,EAAjC;AAEIU,cAAAA,Q,GAAWJ,EAAE,CAACK,UAAH,CAAc,OAAd,C;AACXC,cAAAA,Q,GAAWF,QAAQ,CAACG,KAAT,CAAe,UAAf,EAA2B,IAA3B,EAAiC,KAAKX,KAAL,CAAWO,GAAX,CAAeR,KAAf,CAAqBD,EAAtD,EAA0Dc,GAA1D,GACdC,IADc,CACT,UAAAC,QAAQ,EAAI;AAChBA,gBAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAAC,GAAG,EAAI;AACtBrB,kBAAAA,OAAO,CAACC,GAAR,CAAYoB,GAAG,CAAClB,EAAhB,EAAoB,IAApB,EAA0BkB,GAAG,CAACC,IAAJ,EAA1B;AACD,iBAFD;AAGD,eALc,WAMR,UAAAC,GAAG,EAAI;AACZvB,gBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCsB,GAAvC;AACD,eARc,C;;;;;;;;;;;6BAYV;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADJ,EAMI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAY,KAAKlB,KAAL,CAAWE,KAAvB,CARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKF,KAAL,CAAWG,OAAf,CATJ,CADJ;AAcH;;;;EAxEchB,KAAK,CAACgC,S;;AA4EzB,eAAe1B,IAAf","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport Nav from '../../components/nav'\nimport * as firebase from 'firebase';\nimport loadFirebase from '../../lib/db'\nimport withRouter from 'next/router'\n\nclass Note extends React.Component {\n    static async getInitialProps(context) {\n        console.log('context', context);\n        this.setState({\n            id: context.query.id\n        })\n    }\n\n    // componentDidMount() {\n    //     const { id } = this.props.id;\n    //     if (!firebase.apps.length) {\n    //         firebase.initializeApp(clientCredentials);\n    //     }\n    //     const rootRef = firebase.database().ref().child('notes/' + id);\n    //     const titleRef = rootRef.child('title');\n    //     const contentRef = rootRef.child('content');\n    //     var title = '';\n    //     var content = '';\n    //     titleRef.on('value', snap => {\n    //         title = snap.val();\n    //     });\n    //     contentRef.on('value', snap => {\n    //         content = snap.val();\n    //     });\n        \n    //     return {id, title, content};\n    // }\n\n    constructor(props) {\n        super(props);\n        console.log(props.query);\n        this.state = {\n            id: null,\n            title: '',\n            content: ''\n        }\n    }\n\n    async componentDidMount() {\n        const firebase = await loadFirebase();\n        const db = firebase.firestore();\n        console.log(router);\n        console.log(this.props.url.query.id);\n\n        let notesRef = db.collection('notes');\n        let allNotes = notesRef.where('document', '==', this.props.url.query.id).get()\n        .then(snapshot => {\n          snapshot.forEach(doc => {\n            console.log(doc.id, '=>', doc.data());\n          });\n        })\n        .catch(err => {\n          console.log('Error getting documents', err);\n        });\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Head>\n                <title>Note</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n                </Head>\n    \n                <Nav />\n    \n                <h1>Title: {this.props.title}</h1>\n                <p>{this.props.content}</p>\n    \n            </div>\n        )\n    }\n\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}