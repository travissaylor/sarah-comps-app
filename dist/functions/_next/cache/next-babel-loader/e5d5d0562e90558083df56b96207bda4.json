{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/notes.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Nav from '../components/nav';\nimport Link from 'next/link';\nimport * as firebase from 'firebase';\nimport loadFirebase from '../lib/db';\n\nvar Notes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Notes, _React$Component);\n\n  function Notes() {\n    _classCallCheck(this, Notes);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Notes).apply(this, arguments));\n  }\n\n  _createClass(Notes, [{\n    key: \"componentDidMount\",\n    // static async getInitialProps() {\n    //     if (!firebase.apps.length) {\n    //         firebase.initializeApp(clientCredentials);\n    //     }\n    //     const rootRef = firebase.database().ref().child('notes/1');\n    //     const titleRef = rootRef.child('title');\n    //     var title = '';\n    //     titleRef.once('value', snap => {\n    //         title = snap.val();\n    //     });\n    //     console.log(title);\n    //     return {title};\n    // }\n    value: function componentDidMount() {\n      var firebase, db, rootRef, titleRef, title;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(loadFirebase());\n\n            case 2:\n              firebase = _context.sent;\n              db = firebase.firestore();\n              rootRef = db.ref().child('notes/1');\n              titleRef = rootRef.child('title');\n              title = '';\n              titleRef.on('value', function (snap) {\n                title = snap.val();\n              });\n              console.log(title);\n              return _context.abrupt(\"return\", {\n                title: title\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Notes\"), __jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), __jsx(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Notes\"), __jsx(Link, {\n        href: \"/note/[id]\",\n        as: \"/note/1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.title)));\n    }\n  }]);\n\n  return Notes;\n}(React.Component);\n\nexport default Notes;","map":{"version":3,"sources":["/Users/tsaylor/sites/tsaylor/sarah-comps-app/pages/notes.js"],"names":["React","Head","Nav","Link","firebase","loadFirebase","Notes","db","firestore","rootRef","ref","child","titleRef","title","on","snap","val","console","log","props","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,YAAP,MAAyB,WAAzB;;IAEMC,K;;;;;;;;;;;;;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;+CAG2BD,YAAY,E;;;AAA7BD,cAAAA,Q;AACAG,cAAAA,E,GAAKH,QAAQ,CAACI,SAAT,E;AACLC,cAAAA,O,GAAUF,EAAE,CAACG,GAAH,GAASC,KAAT,CAAe,SAAf,C;AACVC,cAAAA,Q,GAAWH,OAAO,CAACE,KAAR,CAAc,OAAd,C;AACbE,cAAAA,K,GAAQ,E;AACZD,cAAAA,QAAQ,CAACE,EAAT,CAAY,OAAZ,EAAqB,UAAAC,IAAI,EAAI;AACzBF,gBAAAA,KAAK,GAAGE,IAAI,CAACC,GAAL,EAAR;AACH,eAFD;AAIAC,cAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;+CACO;AAACA,gBAAAA,KAAK,EAALA;AAAD,e;;;;;;;;;;;6BAGF;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADJ,EAMI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARJ,EASI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,YAAX;AAAwB,QAAA,EAAE,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKM,KAAL,CAAWN,KAAf,CADJ,CATJ,CADJ;AAeH;;;;EA7Ceb,KAAK,CAACoB,S;;AAgD1B,eAAed,KAAf","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport Nav from '../components/nav'\nimport Link from 'next/link'\nimport * as firebase from 'firebase';\nimport loadFirebase from '../lib/db'\n\nclass Notes extends React.Component {\n    // static async getInitialProps() {\n    //     if (!firebase.apps.length) {\n    //         firebase.initializeApp(clientCredentials);\n    //     }\n    //     const rootRef = firebase.database().ref().child('notes/1');\n    //     const titleRef = rootRef.child('title');\n    //     var title = '';\n    //     titleRef.once('value', snap => {\n    //         title = snap.val();\n    //     });\n    //     console.log(title);\n    //     return {title};\n    // }\n\n    async componentDidMount() {\n        const firebase = await loadFirebase();\n        const db = firebase.firestore();\n        const rootRef = db.ref().child('notes/1');\n        const titleRef = rootRef.child('title');\n        var title = '';\n        titleRef.on('value', snap => {\n            title = snap.val();\n        });\n\n        console.log(title);\n        return {title};\n    }\n\n    render() {\n        return(\n            <div>\n                <Head>\n                <title>Notes</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n                </Head>\n\n                <Nav />\n\n                <h1>Notes</h1>\n                <Link href=\"/note/[id]\" as=\"/note/1\">\n                    <a>{this.props.title}</a>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default Notes"]},"metadata":{},"sourceType":"module"}