{"ast":null,"code":"const firebaseConfig = {\n  // paste your firebase config here:\n  apiKey: process.env.FIREBASE_API_KEY,\n  authDomain: process.env.FIREBASE_API_KEY,\n  databaseURL: process.env.FIREBASE_DATABASE_URL,\n  projectId: process.env.FIREBASE_PROJECT_ID,\n  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.FIREBASE_APP_ID,\n  measurementId: process.env.FIREBASE_MEASUREMENT_ID\n};\nexport default async function loadFirebase() {\n  const firebase = await import('firebase/app');\n  await import('firebase/firestore');\n\n  try {\n    if (!firebase.apps.length) {\n      const app = firebase.initializeApp(firebaseConfig);\n      firebase.firestore(app);\n    }\n  } catch (err) {\n    // we skip the \"already exists\" message which is\n    // not an actual error when we're hot-reloading\n    console.log(err);\n\n    if (!/already exists/.test(err.message)) {\n      console.error('Firebase initialization error', err.stack);\n    }\n  }\n\n  return firebase;\n}","map":{"version":3,"sources":["/Users/tsaylor/sites/tsaylor/sarah-comps-app/lib/db.js"],"names":["firebaseConfig","apiKey","process","env","FIREBASE_API_KEY","authDomain","databaseURL","FIREBASE_DATABASE_URL","projectId","FIREBASE_PROJECT_ID","storageBucket","FIREBASE_STORAGE_BUCKET","messagingSenderId","FIREBASE_MESSAGING_SENDER_ID","appId","FIREBASE_APP_ID","measurementId","FIREBASE_MEASUREMENT_ID","loadFirebase","firebase","apps","length","app","initializeApp","firestore","err","console","log","test","message","error","stack"],"mappings":"AAAA,MAAMA,cAAc,GAAG;AACnB;AACAC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBAFD;AAGnBC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYC,gBAHL;AAInBE,EAAAA,WAAW,EAAEJ,OAAO,CAACC,GAAR,CAAYI,qBAJN;AAKnBC,EAAAA,SAAS,EAAEN,OAAO,CAACC,GAAR,CAAYM,mBALJ;AAMnBC,EAAAA,aAAa,EAAER,OAAO,CAACC,GAAR,CAAYQ,uBANR;AAOnBC,EAAAA,iBAAiB,EAAEV,OAAO,CAACC,GAAR,CAAYU,4BAPZ;AAQnBC,EAAAA,KAAK,EAAEZ,OAAO,CAACC,GAAR,CAAYY,eARA;AASnBC,EAAAA,aAAa,EAAEd,OAAO,CAACC,GAAR,CAAYc;AATR,CAAvB;AAYE,eAAe,eAAeC,YAAf,GAA8B;AAC3C,QAAMC,QAAQ,GAAG,MAAM,OAAO,cAAP,CAAvB;AACA,QAAM,OAAO,oBAAP,CAAN;;AACA,MAAI;AACF,QAAI,CAACA,QAAQ,CAACC,IAAT,CAAcC,MAAnB,EAA2B;AACzB,YAAMC,GAAG,GAAGH,QAAQ,CAACI,aAAT,CAAuBvB,cAAvB,CAAZ;AACAmB,MAAAA,QAAQ,CAACK,SAAT,CAAmBF,GAAnB;AACD;AACF,GALD,CAKE,OAAOG,GAAP,EAAY;AACZ;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAI,CAAC,iBAAiBG,IAAjB,CAAsBH,GAAG,CAACI,OAA1B,CAAL,EAAyC;AACvCH,MAAAA,OAAO,CAACI,KAAR,CAAc,+BAAd,EAA+CL,GAAG,CAACM,KAAnD;AACD;AACF;;AACD,SAAOZ,QAAP;AACD","sourcesContent":["const firebaseConfig = {\n    // paste your firebase config here:\n    apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: process.env.FIREBASE_API_KEY,\n    databaseURL: process.env.FIREBASE_DATABASE_URL,\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.FIREBASE_APP_ID,\n    measurementId: process.env.FIREBASE_MEASUREMENT_ID\n}\n\n  export default async function loadFirebase() {\n    const firebase = await import('firebase/app');\n    await import('firebase/firestore');\n    try {\n      if (!firebase.apps.length) {\n        const app = firebase.initializeApp(firebaseConfig);\n        firebase.firestore(app);\n      }\n    } catch (err) {\n      // we skip the \"already exists\" message which is\n      // not an actual error when we're hot-reloading\n      console.log(err);\n      if (!/already exists/.test(err.message)) {\n        console.error('Firebase initialization error', err.stack);\n      }\n    }\n    return firebase;\n  }"]},"metadata":{},"sourceType":"module"}